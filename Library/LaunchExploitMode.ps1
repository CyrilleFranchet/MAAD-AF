#Exploit mode
function LaunchExploitMode {
    #Create initial foothold by accessing various AzureAD and M365 services
    establish_connection
    
    $option_list = @{0 = "Exit"; 1 = "Recon Connected AzureAD Environment"; 2 = "Create Backdoor account for redundant access"; 3 = "Deploy backdoor using Cross Tenant Synchronization"; 4 = "Modify Trusted IP Config for Easier Access"; 5 = "Disable Mailbox Auditing to Evade Detection"; 6 = "Disable Phishing Monitoring"; 7 = "Configure Mailbox Rules to Hide Emails"; 8 = "Setup Mailbox Forwarding for Continuous Exfiltration"; 9 = "Gain User Mailbox Access"; 10 = "Enable External Access to Teams Data for Continuous Access"; 11 = "Find and Exfiltrate Data with eDiscovery"; 12 = "Brute Force Password to Gain Access"; 13 = "Disable Tenant Level MFA Policies for Easier Access"; 14 = "Exploit Sharepoint"; 15 = "Remove Access of Users"; 16 = "External Recon"; 17 = "Obfuscate access using a TOR proxy"};

    while ($true){
        Write-Host ""
        OptionDisplay "MAAD Attack Arsenal:" $option_list

        try {
            [int]$detection_user_choice = Read-Host -Prompt "`nSelect an option from the Arsenal:"
            $detection_choice = ($option_list.$detection_user_choice)

            if ($detection_user_choice -ne 0 -and $detection_user_choice -in $option_list.Keys) {
                Write-Host "`nExecuting: $detection_choice" -ForegroundColor Yellow -BackgroundColor Black
            }
        }
        catch {
            #Do nothing
        }

        switch ($detection_user_choice) {
            1 {AzureADRecon}
            2 {NewAdminAccountCreation}
            3 {CTSBackdoor}
            4 {TrustedNetworkConfig}
            5 {DisableMailboxAuditing}
            6 {DisableAntiPhishing}
            7 {MailboxDeleteRuleSetup}
            8 {MailForwarding}
            9 {GrantMailboxAccess}
            10 {ExternalTeamsAccess}
            11 {eDiscovery}
            12 {InternalBruteForce}
            13 {DisableMFA}
            14 {SharepointExploiter}
            15 {RemoveAccess}
            16 {ExternalRecon}
            17 {TORAnonymizer("start")}
            0 {
                terminate_connection
                if ($global:tor_proxy = $true) {
                    TORAnonymizer("stop")
                }
                Write-Host "Exiting tool!!!"
                exit
            }
        }
    }
    
}